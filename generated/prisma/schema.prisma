// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  role      String
  password  String
  avatar    String?
  exams     Exam[]
  results   Result[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Exam {
  id              Int              @id @default(autoincrement())
  title           String
  description     String
  startDate       DateTime
  duration        Int
  category        String
  status          String           @default("active") @db.VarChar(255)
  userId          Int
  user            User             @relation(fields: [userId], references: [id])
  questions       Question[]
  results         Result[]
  cheatingReports CheatingReport[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model Question {
  id      Int      @id @default(autoincrement())
  title   String
  options String[]
  points  Int
  answer  Int
  examId  Int
  exam    Exam     @relation(fields: [examId], references: [id])
}

model Result {
  id        Int             @id @default(autoincrement())
  userId    Int
  examId    Int
  answers   UserExamAnswer?
  score     Int
  passed    Boolean
  createdAt DateTime        @default(now())
  user      User            @relation(fields: [userId], references: [id])
  exam      Exam            @relation(fields: [examId], references: [id])
}

model UserExamAnswer {
  id       Int    @id @default(autoincrement())
  resultId Int    @unique
  answer   String

  result Result? @relation(fields: [resultId], references: [id])
}

model CheatingReport {
  id           Int      @id @default(autoincrement())
  studentId    Int
  examId       Int
  timestamp    DateTime @default(now())
  cheatingType String
  exam         Exam     @relation(fields: [examId], references: [id], onDelete: Cascade)
}
